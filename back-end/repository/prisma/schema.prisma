generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Person {
    id        Int       @id @default(autoincrement())
    firstName String
    lastName  String
    email     String    @unique
    phone     String
    birthDate DateTime
    member    Member?
    employee  Employee?
}

model Member {
    id         Int          @id @default(autoincrement())
    personId   Int          @unique
    person     Person       @relation(fields: [personId], references: [id])
    Enrollment Enrollment[]
    username   String
    password   String
}

model Employee {
    id       Int     @id @default(autoincrement())
    admin    Boolean
    title    String
    personId Int     @unique
    person   Person  @relation(fields: [personId], references: [id])
    Club     Club[]
}

model Region {
    id         Int          @id @default(autoincrement())
    name       String
    Enrollment Enrollment[]
}

model Club {
    id         Int          @id @default(autoincrement())
    address    String
    regionId   Int
    Enrollment Enrollment[]
    employeeId Int?
    Employee   Employee?    @relation(fields: [employeeId], references: [id])
}

model Subscription {
    id         Int          @id @default(autoincrement())
    type       String
    price      Float
    Enrollment Enrollment[]
}

model Enrollment {
    id             Int          @id @default(autoincrement())
    memberId       Int
    Member         Member       @relation(fields: [memberId], references: [id])
    subscriptionId Int
    subscription   Subscription @relation(fields: [subscriptionId], references: [id])
    regionId       Int
    region         Region       @relation(fields: [regionId], references: [id])
    clubId         Int?
    Club           Club?        @relation(fields: [clubId], references: [id])
    enrollmentDate DateTime
    expirationDate DateTime
}
