generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Person {
    id        Int       @id @default(autoincrement())
    firstName String
    lastName  String
    email     String    @unique
    phone     String
    birthDate DateTime
    member    Member?
    employee  Employee?
}

model Member {
    id          Int          @id @default(autoincrement())
    personId    Int          @unique
    person      Person       @relation(fields: [personId], references: [id])
    enrollments Enrollment[]
    username    String
    password    String
}

model Employee {
    id          Int          @id @default(autoincrement())
    admin       Boolean
    title       String
    personId    Int          @unique
    person      Person       @relation(fields: [personId], references: [id])
    employments Employment[]
}

model Employment {
    id         Int      @id @default(autoincrement())
    startDate  DateTime @default(now())
    endDate    DateTime
    employeeId Int
    employee   Employee @relation(fields: [employeeId], references: [id])
    clubId     Int
    club       Club     @relation(fields: [clubId], references: [id])
}

model Region {
    id          Int          @id @default(autoincrement())
    name        String
    enrollments Enrollment[]
    clubs       Club[]
}

model Club {
    id          Int          @id @default(autoincrement())
    address     String
    regionId    Int
    region      Region       @relation(fields: [regionId], references: [id])
    enrollments Enrollment[]
    employments Employment[]
}

model Subscription {
    id          Int          @id @default(autoincrement())
    type        String
    price       Float
    enrollments Enrollment[]
}

model Enrollment {
    id             Int          @id @default(autoincrement())
    memberId       Int
    member         Member       @relation(fields: [memberId], references: [id])
    subscriptionId Int
    subscription   Subscription @relation(fields: [subscriptionId], references: [id])
    regionId       Int?
    region         Region?       @relation(fields: [regionId], references: [id])
    clubId         Int?
    club           Club?        @relation(fields: [clubId], references: [id])
    enrollmentDate DateTime
    expirationDate DateTime
}
